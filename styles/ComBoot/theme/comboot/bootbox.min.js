/*! @preserve
 * bootbox.js
 * version: 5.0.0-beta
 * author: Nick Payne <nick@kurai.co.uk>
 * license: MIT
 * http://bootboxjs.com/
 */

(function(root,factory){'use strict';if(typeof define==='function'&&define.amd){define(['jquery'],factory)}else if(typeof exports==='object'){module.exports=factory(require('jquery'))}else{root.bootbox=factory(root.jQuery)}}(this,function init($,undefined){'use strict';if(!Object.keys){Object.keys=(function(){'use strict';var hasOwnProperty=Object.prototype.hasOwnProperty,hasDontEnumBug=!({toString:null}).propertyIsEnumerable('toString'),dontEnums=['toString','toLocaleString','valueOf','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','constructor'],dontEnumsLength=dontEnums.length;return function(obj){if(typeof obj!=='function'&&(typeof obj!=='object'||obj===null)){throw new TypeError('Object.keys called on non-object')}
var result=[],prop,i;for(prop in obj){if(hasOwnProperty.call(obj,prop)){result.push(prop)}}
if(hasDontEnumBug){for(i=0;i<dontEnumsLength;i++){if(hasOwnProperty.call(obj,dontEnums[i])){result.push(dontEnums[i])}}}
return result}}())}
var exports={};var VERSION='5.0.0';exports.VERSION=VERSION;var locales={};var templates={dialog:'<div class="bootbox modal" tabindex="-1" role="dialog" aria-hidden="true">'+'<div class="modal-dialog">'+'<div class="modal-content">'+'<div class="modal-body"><div class="bootbox-body"></div></div>'+'</div>'+'</div>'+'</div>',header:'<div class="modal-header">'+'<h5 class="modal-title"></h5>'+'</div>',footer:'<div class="modal-footer"></div>',closeButton:'<button type="button" class="bootbox-close-button close" aria-hidden="true">&times;</button>',form:'<form class="bootbox-form"></form>',button:'<button type="button" class="btn"></button>',option:'<option></option>',inputs:{text:'<input class="bootbox-input bootbox-input-text form-control" autocomplete="off" type="text" />',textarea:'<textarea class="bootbox-input bootbox-input-textarea form-control"></textarea>',email:'<input class="bootbox-input bootbox-input-email form-control" autocomplete="off" type="email" />',select:'<select class="bootbox-input bootbox-input-select form-control"></select>',checkbox:'<div class="form-check checkbox"><label class="form-check-label"><input class="form-check-input bootbox-input bootbox-input-checkbox" type="checkbox" /></label></div>',radio:'<div class="form-check radio"><label class="form-check-label"><input class="form-check-input bootbox-input bootbox-input-radio" type="radio" name="bootbox-radio" /></label></div>',date:'<input class="bootbox-input bootbox-input-date form-control" autocomplete="off" type="date" />',time:'<input class="bootbox-input bootbox-input-time form-control" autocomplete="off" type="time" />',number:'<input class="bootbox-input bootbox-input-number form-control" autocomplete="off" type="number" />',password:'<input class="bootbox-input bootbox-input-password form-control" autocomplete="off" type="password" />',range:'<input class="bootbox-input bootbox-input-range" autocomplete="off" type="range" />'}};var defaults={locale:'en',backdrop:'static',animate:!0,className:null,closeButton:!0,show:!0,container:'body',value:"",inputType:'text',swapButtonOrder:!1};exports.locales=function(name){return name?locales[name]:locales}
exports.addLocale=function(name,values){$.each(['OK','CANCEL','CONFIRM'],function(_,v){if(!values[v]){throw new Error('Please supply a translation for "'+v+'"')}});locales[name]={OK:values.OK,CANCEL:values.CANCEL,CONFIRM:values.CONFIRM};return exports}
exports.removeLocale=function(name){if(name!=='en'){delete locales[name]}
else{throw new Error('"en" is used as the default and fallback locale and cannot be removed.')}
return exports}
exports.setLocale=function(name){return exports.setDefaults('locale',name)}
exports.setDefaults=function(){var values={};if(arguments.length===2){values[arguments[0]]=arguments[1]}else{values=arguments[0]}
$.extend(defaults,values);return exports}
exports.hideAll=function(){$(".bootbox").modal("hide");return exports}
exports.init=function(_$){return init(_$||$)}
exports.dialog=function(options){if($.fn.modal===undefined){throw new Error('"$.fn.modal" is not defined; please double check you have included '+'the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ '+'for more details.')}
options=sanitize(options);if($.fn.modal.Constructor.VERSION){options.fullBootstrapVersion=$.fn.modal.Constructor.VERSION;var i=options.fullBootstrapVersion.indexOf('.');options.bootstrap=options.fullBootstrapVersion.substring(0,i)}
else{options.bootstrap='2';options.fullBootstrapVersion='2.3.2';console.warn('Bootbox will *mostly* work with Bootstrap 2, but we do not officially support it. Please upgrade, if possible.')}
var dialog=$(templates.dialog);var innerDialog=dialog.find('.modal-dialog');var body=dialog.find('.modal-body');var header=$(templates.header);var footer=$(templates.footer);var buttons=options.buttons;var callbacks={onEscape:options.onEscape};body.find('.bootbox-body').html(options.message);if(getKeyLength(options.buttons)>0){each(buttons,function(key,b){var button=$(templates.button);button.data('bb-handler',key);button.addClass(b.className);switch(key)
{case 'ok':case 'confirm':button.addClass('bootbox-accept');break;case 'cancel':button.addClass('bootbox-cancel');break}
button.html(b.label);footer.append(button);callbacks[key]=b.callback});body.after(footer)}
if(options.animate===!0){dialog.addClass('fade')}
if(options.className){dialog.addClass(options.className)}
if(options.size){if(options.fullBootstrapVersion.substring(0,3)<'3.1'){console.warn('"size" requires Bootstrap 3.1.0 or higher. You appear to be using '+options.fullBootstrapVersion+'. Please upgrade to use this option.')}
if(options.size==='large'){innerDialog.addClass('modal-lg')}else if(options.size==='small'){innerDialog.addClass('modal-sm')}}
if(options.title){body.before(templates.header);dialog.find('.modal-title').html(options.title)}
if(options.closeButton){var closeButton=$(templates.closeButton);if(options.title){if(options.bootstrap>3){dialog.find('.modal-header').append(closeButton)}
else{dialog.find('.modal-header').prepend(closeButton)}}else{closeButton.css('margin-top','-2px').prependTo(body)}}
dialog.one("hide.bs.modal",function(){dialog.off("escape.close.bb");dialog.off("click")});dialog.one("hidden.bs.modal",function(e){if(e.target===this){dialog.remove()}});dialog.one('shown.bs.modal',function(){dialog.find('.bootbox-accept:first').focus()});if(options.backdrop!=='static'){dialog.on('click.dismiss.bs.modal',function(e){if(dialog.children('.modal-backdrop').length){e.currentTarget=dialog.children('.modal-backdrop').get(0)}
if(e.target!==e.currentTarget){return}
dialog.trigger('escape.close.bb')})}
dialog.on('escape.close.bb',function(e){if(callbacks.onEscape){processCallback(e,dialog,callbacks.onEscape)}});dialog.on('click','.modal-footer button',function(e){var callbackKey=$(this).data('bb-handler');processCallback(e,dialog,callbacks[callbackKey])});dialog.on('click','.bootbox-close-button',function(e){processCallback(e,dialog,callbacks.onEscape)});dialog.on('keyup',function(e){if(e.which===27){dialog.trigger('escape.close.bb')}});$(options.container).append(dialog);dialog.modal({backdrop:options.backdrop?'static':!1,keyboard:!1,show:!1});if(options.show){dialog.modal('show')}
return dialog}
exports.alert=function(){var options;options=mergeDialogOptions('alert',['ok'],['message','callback'],arguments);if(options.callback&&!$.isFunction(options.callback)){throw new Error('alert requires callback property to be a function when provided')}
options.buttons.ok.callback=options.onEscape=function(){if($.isFunction(options.callback)){return options.callback.call(this)}
return!0};return exports.dialog(options)}
exports.confirm=function(){var options;options=mergeDialogOptions('confirm',['cancel','confirm'],['message','callback'],arguments);if(!$.isFunction(options.callback)){throw new Error('confirm requires a callback')}
options.buttons.cancel.callback=options.onEscape=function(){return options.callback.call(this,!1)};options.buttons.confirm.callback=function(){return options.callback.call(this,!0)};return exports.dialog(options)}
exports.prompt=function(){var options;var promptDialog;var form;var input;var shouldShow;var inputOptions;form=$(templates.form);options=mergeDialogOptions('prompt',['cancel','confirm'],['title','callback'],arguments);if(!options.value){options.value=defaults.value}
if(!options.inputType){options.inputType=defaults.inputType}
shouldShow=(options.show===undefined)?defaults.show:options.show;options.show=!1;options.buttons.cancel.callback=options.onEscape=function(){return options.callback.call(this,null)};options.buttons.confirm.callback=function(){var value;if(options.inputType==='checkbox'){value=input.find('input:checked').map(function(){return $(this).val()}).get()}else if(options.inputType==='radio'){value=input.find('input:checked').val()}
else{if(input[0].checkValidity&&!input[0].checkValidity()){return!1}else{value=input.val()}}
return options.callback.call(this,value)};if(!options.title){throw new Error('prompt requires a title')}
if(!$.isFunction(options.callback)){throw new Error('prompt requires a callback')}
if(!templates.inputs[options.inputType]){throw new Error('Invalid prompt type')}
input=$(templates.inputs[options.inputType]);switch(options.inputType){case 'text':case 'textarea':case 'email':case 'password':input.val(options.value);if(options.placeholder){input.attr('placeholder',options.placeholder)}
if(options.pattern){input.attr('pattern',options.pattern)}
if(options.maxlength){input.attr('maxlength',options.maxlength)}
if(options.required){input.prop({required:!0})}
break;case 'date':case 'time':case 'number':case 'range':input.val(options.value);if(options.placeholder){input.attr('placeholder',options.placeholder)}
if(options.pattern){input.attr('pattern',options.pattern)}
if(options.required){input.prop({required:!0})}
if(options.inputType!=='date'){if(options.step){if(options.step==='any'||(!isNaN(options.step)&&options.step>0)){input.attr('step',options.step)}
else{throw new Error('"step" must be a valid positive number or the value "any". See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-step for more information.')}}}
input=validateMinOrMaxValue(input,options.inputType,'min',options.min,options.max,options);input=validateMinOrMaxValue(input,options.inputType,'max',options.max,options.min,options);break;case 'select':var groups={};inputOptions=options.inputOptions||[];if(!$.isArray(inputOptions)){throw new Error('Please pass an array of input options')}
if(!inputOptions.length){throw new Error('prompt with select requires at least one option value')}
if(options.placeholder){input.attr('placeholder',options.placeholder)}
if(options.required){input.prop({required:!0})}
each(inputOptions,function(_,option){var elem=input;if(option.value===undefined||option.text===undefined){throw new Error('each option needs a "value" and a "text" property')}
if(option.group){if(!groups[option.group]){groups[option.group]=$('<optgroup />').attr('label',option.group)}
elem=groups[option.group]}
var o=$(templates.option);o.attr('value',option.value).text(option.text);elem.append(o)});each(groups,function(_,group){input.append(group)});input.val(options.value);break;case 'checkbox':var checkboxValues=$.isArray(options.value)?options.value:[options.value];inputOptions=options.inputOptions||[];if(!inputOptions.length){throw new Error('prompt with checkbox requires options')}
input=$('<div/>');each(inputOptions,function(_,option){if(option.value===undefined||option.text===undefined){throw new Error('each option needs a "value" and a "text" property')}
var checkbox=$(templates.inputs[options.inputType]);checkbox.find('input').attr('value',option.value);checkbox.find('label').append('\n'+option.text);each(checkboxValues,function(_,value){if(value===option.value){checkbox.find('input').prop('checked',!0)}});input.append(checkbox)});break;case 'radio':if(options.value!==undefined&&$.isArray(options.value)){throw new Error('prompt with radio requires a single, non-array value for "value".')}
inputOptions=options.inputOptions||[];if(!inputOptions.length){throw new Error('prompt with radio requires options')}
input=$('<div/>');var checkFirstRadio=!0;each(inputOptions,function(_,option){if(option.value===undefined||option.text===undefined){throw new Error('each option needs a "value" and a "text" property')}
var radio=$(templates.inputs[options.inputType]);radio.find('input').attr('value',option.value);radio.find('label').append('\n'+option.text);if(options.value!==undefined){if(option.value===options.value){radio.find('input').prop('checked',!0);checkFirstRadio=!1}}
input.append(radio)});if(checkFirstRadio){input.find('input[type="radio"]').first().prop('checked',!0)}
break}
form.append(input);form.on('submit',function(e){e.preventDefault();e.stopPropagation();promptDialog.find('.bootbox-accept').click()});if($.trim(options.message)!==''){var message=$('<div class="bootbox-prompt-message"></div>').html(options.message);form.prepend(message);options.message=form}
else{options.message=form}
promptDialog=exports.dialog(options);promptDialog.off('shown.bs.modal');promptDialog.on('shown.bs.modal',function(){input.focus()});if(shouldShow===!0){promptDialog.modal('show')}
return promptDialog}
function mapArguments(args,properties){var argn=args.length;var options={};if(argn<1||argn>2){throw new Error('Invalid argument length')}
if(argn===2||typeof args[0]==='string'){options[properties[0]]=args[0];options[properties[1]]=args[1]}else{options=args[0]}
return options}
function mergeArguments(defaults,args,properties){return $.extend(!0,{},defaults,mapArguments(args,properties))}
function mergeDialogOptions(className,labels,properties,args){var locale;if(args&&args[0]){locale=args[0].locale||defaults.locale;var swapButtons=args[0].swapButtonOrder||defaults.swapButtonOrder;if(swapButtons){labels=labels.reverse()}}
var baseOptions={className:'bootbox-'+className,buttons:createLabels(labels,locale)};return validateButtons(mergeArguments(baseOptions,args,properties),labels)}
function validateButtons(options,buttons){var allowedButtons={};each(buttons,function(key,value){allowedButtons[value]=!0});each(options.buttons,function(key){if(allowedButtons[key]===undefined){throw new Error('button key "'+key+'" is not allowed (options are '+buttons.join(' ')+')')}});return options}
function createLabels(labels,locale){var buttons={};for(var i=0,j=labels.length;i<j;i++){var argument=labels[i];var key=argument.toLowerCase();var value=argument.toUpperCase();buttons[key]={label:getText(value,locale)}}
return buttons}
function getText(key,locale){var labels=locales[locale];return labels?labels[key]:locales.en[key]}
function sanitize(options){var buttons;var total;if(typeof options!=='object'){throw new Error('Please supply an object of options')}
if(!options.message){throw new Error('Please specify a message')}
options=$.extend({},defaults,options);if(!options.buttons){options.buttons={}}
buttons=options.buttons;total=getKeyLength(buttons);each(buttons,function(key,button,index){if($.isFunction(button)){button=buttons[key]={callback:button}}
if($.type(button)!=='object'){throw new Error('button with key "'+key+'" must be an object')}
if(!button.label){button.label=key}
if(!button.className){var isPrimary=!1;if(options.swapButtonOrder){isPrimary=index===0}
else{isPrimary=index===total-1}
if(total<=2&&isPrimary){button.className='btn-primary'}else{button.className='btn-secondary btn-default'}}});return options}
function getKeyLength(obj){return Object.keys(obj).length}
function each(collection,iterator){var index=0;$.each(collection,function(key,value){iterator(key,value,index++)})}
function processCallback(e,dialog,callback){e.stopPropagation();e.preventDefault();var preserveDialog=$.isFunction(callback)&&callback.call(dialog,e)===!1;if(!preserveDialog){dialog.modal('hide')}}
function validateMinOrMaxValue(input,type,name,value,compareValue,options){if(value!==undefined){if(type==='date'){input.attr(name,value);if(!/(\d{4})-(\d{2})-(\d{2})/.test(value)){console.warn('Edge and Blink/Webkit-based browsers expect date values to be of the form "YYYY-mm-dd", including zero-padded numbers. '+'Bootbox does not enforce this rule, but your '+name+' value may not be enforced by this browser.')}}
else if(type==='time'){if(/([01][0-9]|2[0-3]):[0-5][0-9]?:[0-5][0-9]/.test(value)){if(compareValue===undefined||options.max>options.min){input.attr(name,value)}
else{throw new Error('"max" must be greater than "min". See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-'+name+' for more information.')}}
else{throw new Error('"'+name+'" is not a valid time. See https://www.w3.org/TR/2012/WD-html-markup-20120315/datatypes.html#form.data.time for more information.')}}
else{if(!isNaN(value)){if(compareValue===undefined||options.max>options.min){input.attr(name,value)}
else{throw new Error('"max" must be greater than "min". See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-'+name+' for more information.')}}
else{throw new Error('"'+name+'" must be a valid number. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-'+name+' for more information.')}}}
return input}
exports.addLocale('en',{OK:'OK',CANCEL:'Cancel',CONFIRM:'OK'});return exports}))